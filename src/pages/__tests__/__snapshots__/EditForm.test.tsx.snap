// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditForm empty dataItem 1`] = `
<EditForm
  dataItem={
    Object {
      "category": undefined,
      "id": "",
      "subType": "testSubType",
      "title": "testTitle",
      "type": "testType",
    }
  }
  loading={false}
  onCancel={[MockFunction]}
  onSubmit={[MockFunction]}
  pageInfo={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  selectData={
    Array [
      Object {
        "children": Array [
          Object {
            "key": "摘抄",
            "value": "摘抄",
          },
          Object {
            "key": "思路",
            "value": "思路",
          },
        ],
        "key": "读书",
        "title": "读书",
      },
    ]
  }
  visible={true}
>
  <Dialog
    animation="zoom"
    bodyStyle={
      Object {
        "height": 260,
      }
    }
    className="edit-form"
    footer={
      <div
        className="footer-grid"
      >
        <React.Fragment>
          <Button
            onClick={[Function]}
          >
            编辑
          </Button>
          <div />
          <Button
            onClick={[Function]}
          >
            清空
          </Button>
          <Button
            disabled={false}
            onClick={[Function]}
          >
            确定
          </Button>
        </React.Fragment>
      </div>
    }
    maskAnimation="fade"
    mousePosition={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    onClose={[Function]}
    title="新建文档"
    visible={true}
  >
    <PortalWrapper
      visible={true}
    >
      <Portal
        getContainer={[Function]}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="rc-dialog-root"
              >
                <div
                  class="rc-dialog-mask rc-dialog-fade-appear"
                />
                <div
                  aria-labelledby="rcDialogTitle1"
                  class="rc-dialog-wrap "
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="rc-dialog edit-form rc-dialog-zoom-appear"
                    role="document"
                    style="transform-origin: 0px 0px;"
                  >
                    <div
                      aria-hidden="true"
                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                      tabindex="0"
                    />
                    <div
                      class="rc-dialog-content"
                    >
                      <button
                        aria-label="Close"
                        class="rc-dialog-close"
                        type="button"
                      >
                        <span
                          class="rc-dialog-close-x"
                        />
                      </button>
                      <div
                        class="rc-dialog-header"
                      >
                        <div
                          class="rc-dialog-title"
                          id="rcDialogTitle1"
                        >
                          新建文档
                        </div>
                      </div>
                      <div
                        class="rc-dialog-body"
                        style="height: 260px;"
                      >
                        <div
                          class="wrapper-grid"
                        >
                          <span>
                            标题
                          </span>
                          <input
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                            value="testTitle"
                          />
                          <span>
                            显示类别
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          >
                            <option
                              value="markdown"
                            >
                              markdown
                            </option>
                            <option
                              value="mapping"
                            >
                              mapping
                            </option>
                            <option
                              value="utils"
                            >
                              utils
                            </option>
                          </select>
                          <span>
                            文档类别
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          >
                            <option
                              value="读书"
                            >
                              读书
                            </option>
                          </select>
                          <span>
                            文档子类
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          />
                        </div>
                      </div>
                      <div
                        class="rc-dialog-footer"
                      >
                        <div
                          class="footer-grid"
                        >
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            编辑
                          </button>
                          <div />
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            清空
                          </button>
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            确定
                          </button>
                        </div>
                      </div>
                    </div>
                    <div
                      aria-hidden="true"
                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                      tabindex="0"
                    />
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <Dialog
            animation="zoom"
            bodyStyle={
              Object {
                "height": 260,
              }
            }
            className="edit-form"
            closable={true}
            destroyOnClose={false}
            focusTriggerAfterClose={true}
            footer={
              <div
                className="footer-grid"
              >
                <React.Fragment>
                  <Button
                    onClick={[Function]}
                  >
                    编辑
                  </Button>
                  <div />
                  <Button
                    onClick={[Function]}
                  >
                    清空
                  </Button>
                  <Button
                    disabled={false}
                    onClick={[Function]}
                  >
                    确定
                  </Button>
                </React.Fragment>
              </div>
            }
            getContainer={[Function]}
            getOpenCount={[Function]}
            keyboard={true}
            mask={true}
            maskAnimation="fade"
            maskClosable={true}
            mousePosition={
              Object {
                "x": 0,
                "y": 0,
              }
            }
            onClose={[Function]}
            prefixCls="rc-dialog"
            switchScrollingEffect={[Function]}
            title="新建文档"
            visible={true}
          >
            <div
              className="rc-dialog-root"
            >
              <Animate
                animation={Object {}}
                component=""
                componentProps={Object {}}
                key="mask"
                onAppear={[Function]}
                onEnd={[Function]}
                onEnter={[Function]}
                onLeave={[Function]}
                showProp="visible"
                transitionAppear={true}
                transitionEnter={true}
                transitionLeave={true}
                transitionName="rc-dialog-fade"
              >
                <AnimateChild
                  animation={Object {}}
                  key="mask"
                  transitionAppear={true}
                  transitionEnter={true}
                  transitionLeave={true}
                  transitionName="rc-dialog-fade"
                >
                  <LazyRenderBox
                    className="rc-dialog-mask"
                    hiddenClassName="rc-dialog-mask-hidden"
                    key="mask"
                    style={Object {}}
                    visible={true}
                  >
                    <div
                      className="rc-dialog-mask"
                      style={Object {}}
                    />
                  </LazyRenderBox>
                </AnimateChild>
              </Animate>
              <div
                aria-labelledby="rcDialogTitle1"
                className="rc-dialog-wrap "
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseUp={[Function]}
                role="dialog"
                style={
                  Object {
                    "display": null,
                  }
                }
                tabIndex={-1}
              >
                <Animate
                  animation={Object {}}
                  component=""
                  componentProps={Object {}}
                  key="dialog"
                  onAppear={[Function]}
                  onEnd={[Function]}
                  onEnter={[Function]}
                  onLeave={[Function]}
                  showProp="visible"
                  transitionAppear={true}
                  transitionEnter={true}
                  transitionLeave={true}
                  transitionName="rc-dialog-zoom"
                >
                  <AnimateChild
                    animation={Object {}}
                    key="dialog-element"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="rc-dialog-zoom"
                  >
                    <LazyRenderBox
                      className="rc-dialog edit-form"
                      key="dialog-element"
                      onMouseDown={[Function]}
                      role="document"
                      style={Object {}}
                      visible={true}
                    >
                      <div
                        className="rc-dialog edit-form"
                        onMouseDown={[Function]}
                        role="document"
                        style={Object {}}
                      >
                        <div
                          aria-hidden="true"
                          style={
                            Object {
                              "height": 0,
                              "outline": "none",
                              "overflow": "hidden",
                              "width": 0,
                            }
                          }
                          tabIndex={0}
                        />
                        <div
                          className="rc-dialog-content"
                        >
                          <button
                            aria-label="Close"
                            className="rc-dialog-close"
                            onClick={[Function]}
                            type="button"
                          >
                            <span
                              className="rc-dialog-close-x"
                            />
                          </button>
                          <div
                            className="rc-dialog-header"
                          >
                            <div
                              className="rc-dialog-title"
                              id="rcDialogTitle1"
                            >
                              新建文档
                            </div>
                          </div>
                          <div
                            className="rc-dialog-body"
                            style={
                              Object {
                                "height": 260,
                              }
                            }
                          >
                            <div
                              className="wrapper-grid"
                            >
                              <span>
                                标题
                              </span>
                              <Input
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testTitle"
                              >
                                <input
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testTitle"
                                />
                              </Input>
                              <span>
                                显示类别
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <option
                                    value="markdown"
                                  >
                                    markdown
                                  </option>
                                  <option
                                    value="mapping"
                                  >
                                    mapping
                                  </option>
                                  <option
                                    value="utils"
                                  >
                                    utils
                                  </option>
                                </select>
                              </Select>
                              <span>
                                文档类别
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testType"
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testType"
                                >
                                  <option
                                    key="type-读书"
                                    value="读书"
                                  >
                                    读书
                                  </option>
                                </select>
                              </Select>
                              <span>
                                文档子类
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testSubType"
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testSubType"
                                />
                              </Select>
                            </div>
                          </div>
                          <div
                            className="rc-dialog-footer"
                          >
                            <div
                              className="footer-grid"
                            >
                              <Button
                                onClick={[Function]}
                              >
                                <button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  编辑
                                </button>
                              </Button>
                              <div />
                              <Button
                                onClick={[Function]}
                              >
                                <button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  清空
                                </button>
                              </Button>
                              <Button
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  确定
                                </button>
                              </Button>
                            </div>
                          </div>
                        </div>
                        <div
                          aria-hidden="true"
                          style={
                            Object {
                              "height": 0,
                              "outline": "none",
                              "overflow": "hidden",
                              "width": 0,
                            }
                          }
                          tabIndex={0}
                        />
                      </div>
                    </LazyRenderBox>
                  </AnimateChild>
                </Animate>
              </div>
            </div>
          </Dialog>
        </Portal>
      </Portal>
    </PortalWrapper>
  </Dialog>
</EditForm>
`;

exports[`EditForm render correctly 1`] = `
<EditForm
  dataItem={
    Object {
      "category": undefined,
      "id": "",
      "subType": "testSubType",
      "title": "testTitle",
      "type": "testType",
    }
  }
  loading={false}
  onCancel={[Function]}
  onSubmit={[Function]}
  pageInfo={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  selectData={
    Array [
      Object {
        "children": Array [
          Object {
            "key": "摘抄",
            "value": "摘抄",
          },
          Object {
            "key": "思路",
            "value": "思路",
          },
        ],
        "key": "读书",
        "title": "读书",
      },
    ]
  }
  visible={true}
>
  <Dialog
    animation="zoom"
    bodyStyle={
      Object {
        "height": 260,
      }
    }
    className="edit-form"
    footer={
      <div
        className="footer-grid"
      >
        <React.Fragment>
          <Button
            onClick={[Function]}
          >
            编辑
          </Button>
          <div />
          <Button
            onClick={[Function]}
          >
            清空
          </Button>
          <Button
            disabled={false}
            onClick={[Function]}
          >
            确定
          </Button>
        </React.Fragment>
      </div>
    }
    maskAnimation="fade"
    mousePosition={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    onClose={[Function]}
    title="新建文档"
    visible={true}
  >
    <PortalWrapper
      visible={true}
    >
      <Portal
        getContainer={[Function]}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="rc-dialog-root"
              >
                <div
                  class="rc-dialog-mask rc-dialog-fade-appear"
                />
                <div
                  aria-labelledby="rcDialogTitle0"
                  class="rc-dialog-wrap "
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="rc-dialog edit-form rc-dialog-zoom-appear"
                    role="document"
                    style="transform-origin: 0px 0px;"
                  >
                    <div
                      aria-hidden="true"
                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                      tabindex="0"
                    />
                    <div
                      class="rc-dialog-content"
                    >
                      <button
                        aria-label="Close"
                        class="rc-dialog-close"
                        type="button"
                      >
                        <span
                          class="rc-dialog-close-x"
                        />
                      </button>
                      <div
                        class="rc-dialog-header"
                      >
                        <div
                          class="rc-dialog-title"
                          id="rcDialogTitle0"
                        >
                          新建文档
                        </div>
                      </div>
                      <div
                        class="rc-dialog-body"
                        style="height: 260px;"
                      >
                        <div
                          class="wrapper-grid"
                        >
                          <span>
                            标题
                          </span>
                          <input
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                            value="testTitle"
                          />
                          <span>
                            显示类别
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          >
                            <option
                              value="markdown"
                            >
                              markdown
                            </option>
                            <option
                              value="mapping"
                            >
                              mapping
                            </option>
                            <option
                              value="utils"
                            >
                              utils
                            </option>
                          </select>
                          <span>
                            文档类别
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          >
                            <option
                              value="读书"
                            >
                              读书
                            </option>
                          </select>
                          <span>
                            文档子类
                          </span>
                          <select
                            style="height: 32px; width: 100%; border-radius: 0.25em; font-size: 18px;"
                          />
                        </div>
                      </div>
                      <div
                        class="rc-dialog-footer"
                      >
                        <div
                          class="footer-grid"
                        >
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            编辑
                          </button>
                          <div />
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            清空
                          </button>
                          <button
                            style="height: 32px; width: 80px; border-radius: 0.25em; font-size: 18px;"
                          >
                            确定
                          </button>
                        </div>
                      </div>
                    </div>
                    <div
                      aria-hidden="true"
                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                      tabindex="0"
                    />
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <Dialog
            animation="zoom"
            bodyStyle={
              Object {
                "height": 260,
              }
            }
            className="edit-form"
            closable={true}
            destroyOnClose={false}
            focusTriggerAfterClose={true}
            footer={
              <div
                className="footer-grid"
              >
                <React.Fragment>
                  <Button
                    onClick={[Function]}
                  >
                    编辑
                  </Button>
                  <div />
                  <Button
                    onClick={[Function]}
                  >
                    清空
                  </Button>
                  <Button
                    disabled={false}
                    onClick={[Function]}
                  >
                    确定
                  </Button>
                </React.Fragment>
              </div>
            }
            getContainer={[Function]}
            getOpenCount={[Function]}
            keyboard={true}
            mask={true}
            maskAnimation="fade"
            maskClosable={true}
            mousePosition={
              Object {
                "x": 0,
                "y": 0,
              }
            }
            onClose={[Function]}
            prefixCls="rc-dialog"
            switchScrollingEffect={[Function]}
            title="新建文档"
            visible={true}
          >
            <div
              className="rc-dialog-root"
            >
              <Animate
                animation={Object {}}
                component=""
                componentProps={Object {}}
                key="mask"
                onAppear={[Function]}
                onEnd={[Function]}
                onEnter={[Function]}
                onLeave={[Function]}
                showProp="visible"
                transitionAppear={true}
                transitionEnter={true}
                transitionLeave={true}
                transitionName="rc-dialog-fade"
              >
                <AnimateChild
                  animation={Object {}}
                  key="mask"
                  transitionAppear={true}
                  transitionEnter={true}
                  transitionLeave={true}
                  transitionName="rc-dialog-fade"
                >
                  <LazyRenderBox
                    className="rc-dialog-mask"
                    hiddenClassName="rc-dialog-mask-hidden"
                    key="mask"
                    style={Object {}}
                    visible={true}
                  >
                    <div
                      className="rc-dialog-mask"
                      style={Object {}}
                    />
                  </LazyRenderBox>
                </AnimateChild>
              </Animate>
              <div
                aria-labelledby="rcDialogTitle0"
                className="rc-dialog-wrap "
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseUp={[Function]}
                role="dialog"
                style={
                  Object {
                    "display": null,
                  }
                }
                tabIndex={-1}
              >
                <Animate
                  animation={Object {}}
                  component=""
                  componentProps={Object {}}
                  key="dialog"
                  onAppear={[Function]}
                  onEnd={[Function]}
                  onEnter={[Function]}
                  onLeave={[Function]}
                  showProp="visible"
                  transitionAppear={true}
                  transitionEnter={true}
                  transitionLeave={true}
                  transitionName="rc-dialog-zoom"
                >
                  <AnimateChild
                    animation={Object {}}
                    key="dialog-element"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="rc-dialog-zoom"
                  >
                    <LazyRenderBox
                      className="rc-dialog edit-form"
                      key="dialog-element"
                      onMouseDown={[Function]}
                      role="document"
                      style={Object {}}
                      visible={true}
                    >
                      <div
                        className="rc-dialog edit-form"
                        onMouseDown={[Function]}
                        role="document"
                        style={Object {}}
                      >
                        <div
                          aria-hidden="true"
                          style={
                            Object {
                              "height": 0,
                              "outline": "none",
                              "overflow": "hidden",
                              "width": 0,
                            }
                          }
                          tabIndex={0}
                        />
                        <div
                          className="rc-dialog-content"
                        >
                          <button
                            aria-label="Close"
                            className="rc-dialog-close"
                            onClick={[Function]}
                            type="button"
                          >
                            <span
                              className="rc-dialog-close-x"
                            />
                          </button>
                          <div
                            className="rc-dialog-header"
                          >
                            <div
                              className="rc-dialog-title"
                              id="rcDialogTitle0"
                            >
                              新建文档
                            </div>
                          </div>
                          <div
                            className="rc-dialog-body"
                            style={
                              Object {
                                "height": 260,
                              }
                            }
                          >
                            <div
                              className="wrapper-grid"
                            >
                              <span>
                                标题
                              </span>
                              <Input
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testTitle"
                              >
                                <input
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testTitle"
                                />
                              </Input>
                              <span>
                                显示类别
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <option
                                    value="markdown"
                                  >
                                    markdown
                                  </option>
                                  <option
                                    value="mapping"
                                  >
                                    mapping
                                  </option>
                                  <option
                                    value="utils"
                                  >
                                    utils
                                  </option>
                                </select>
                              </Select>
                              <span>
                                文档类别
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testType"
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testType"
                                >
                                  <option
                                    key="type-读书"
                                    value="读书"
                                  >
                                    读书
                                  </option>
                                </select>
                              </Select>
                              <span>
                                文档子类
                              </span>
                              <Select
                                onChange={[Function]}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="testSubType"
                              >
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": "100%",
                                    }
                                  }
                                  value="testSubType"
                                />
                              </Select>
                            </div>
                          </div>
                          <div
                            className="rc-dialog-footer"
                          >
                            <div
                              className="footer-grid"
                            >
                              <Button
                                onClick={[Function]}
                              >
                                <button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  编辑
                                </button>
                              </Button>
                              <div />
                              <Button
                                onClick={[Function]}
                              >
                                <button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  清空
                                </button>
                              </Button>
                              <Button
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "borderRadius": "0.25em",
                                      "fontSize": 18,
                                      "height": 32,
                                      "width": 80,
                                    }
                                  }
                                >
                                  确定
                                </button>
                              </Button>
                            </div>
                          </div>
                        </div>
                        <div
                          aria-hidden="true"
                          style={
                            Object {
                              "height": 0,
                              "outline": "none",
                              "overflow": "hidden",
                              "width": 0,
                            }
                          }
                          tabIndex={0}
                        />
                      </div>
                    </LazyRenderBox>
                  </AnimateChild>
                </Animate>
              </div>
            </div>
          </Dialog>
        </Portal>
      </Portal>
    </PortalWrapper>
  </Dialog>
</EditForm>
`;
