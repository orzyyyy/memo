name: test

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: cache package-lock.json
        uses: actions/cache@v1
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: create package-lock.json
        run: |
          npm i --package-lock-only
          mkdir package-temp-dir
          cp package-lock.json package-temp-dir

      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: restore cache from package-lock.json
        uses: actions/cache@v1
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: lint
        run: npm run lint

      - name: tsc
        run: npm run tsc

    needs: setup

  site:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: restore cache from package-lock.json
        uses: actions/cache@v1
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: build for netlify
        run: npm run build

      - name: build for gh-pages
        run: npm run build:gh-pages

      - name: build for business
        run: npm run build:business

    needs: setup

  case:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: restore cache from package-lock.json
        uses: actions/cache@v1
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: test with reporting coverage
        run: npm run codecov

      - name: upload coverage to codecov
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

    needs: setup
